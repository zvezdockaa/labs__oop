import random
from abc import ABC, abstractmethod



class Football_Club():
    name = "Monako"
    coach = "Phil"
    staduim = "Lui 2"
    number_of_players = 36
    points = 90

    def Gde_Igraet(self):
        if (self.points > 89):
            print(self.name + " plays in Champions League")


class Player():
    name_of_player = "Sashka"
    pace = 90
    salary = 30000


class Midfielder(Player):
    acceleration = 80
    dribbling = 79
    long_range_strikes = 89
    passes = 90
    talents = ['finesse shot', 'second wind', 'power free-kick', 'leadership']

def decorator(func): #декоратор оборачивает функцию развития игрока
    def inner():
        print(Player.name_of_player + ' plays in ' + Football_Club.name)
        func() #обернутая функция
        print(Player.name_of_player + ' pace is ' + str(Midfielder.pace))

    return inner


def evolution(): #эволюция игрока, улучшение характеристик
    traits_names=['acceleration', 'dribbling', 'pace', 'long-range strikes']
    traits=[Midfielder.acceleration, Midfielder.dribbling, Midfielder.pace, Midfielder.long_range_strikes]
    for i in range(0, len(traits_names)):
        traits[0] += 4
        traits[1] += 3
        traits[2] += 5
        traits[3] += 0.5
        print('Player ' + str(traits_names[i]) +' will be ' + str(traits[i])) #улучшенные статы игрока
    #print('Player acceleration will be ' + str(Midfielder.acceleration))
    #print('Player dribbling will be ' + str(Midfielder.dribbling))
    print('Player talent is ' + random.choice(Midfielder.talents)) #рандомно выбирает талант игрока

d = decorator(evolution)
d()


class Running:
    def execute_goal(self, pace, x):
        return pace+x

class GoaL:
    def execute_goal(self, pace, x):
        new_goal= True
        if(pace > 79):
            return new_goal
class Player_Game:
    def set_strategy(self, strategy):
        self.strategy= strategy

    def play_game(self, pace, x):
        print(self.strategy.execute_goal(pace, x)) #сначала выводится результирующая скорость, потом наличие гола

class Team():
    def __init__(self):
        self.name






player_statistics = Player_Game()
player_statistics.set_strategy(Running())
player_statistics.play_game(80, 3)

player_statistics.set_strategy(GoaL())
player_statistics.play_game(80,3)
